#!/usr/bin/env bun

import { spawnSync, which, write } from "bun";
import { unlinkSync } from "fs";
import { tmpdir } from "os";

const [include, ...args] = process.argv.slice(2);

if (!include) {
  console.log(
    "Usage: <include header name> [...args to zig translate-c]\n This script will run zig translate-c with the given header file and args. It saves you from saving a temporary header file to disk"
  );
}

const zig = process.env.ZIG || which("zig");

if (!zig?.length) {
  console.log(
    "error: zig executable not found. Set ZIG environment variable or add zig to PATH"
  );
  process.exit(1);
}

const path = tmpdir() + "/zig-translate-c.h";

await write(
  path,
  `
// Automatically generated by zig-translate-c
#include <${include}>
`
);

const { exitCode } = spawnSync(["zig", "translate-c", "-lc", ...args, path], {
  stdin: "inherit",
  stdout: "inherit",
  stderr: "inherit",
});
process.exit(exitCode);
try {
  unlinkSync(path);
} catch (e) {}
